name: Release

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 24
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --ignore-scripts
        env:
          NODE_OPTIONS: --max-old-space-size=8192

      - name: Generate paraglide files
        run: npx @inlang/paraglide-js compile --project ./project.inlang --outdir ./src/lib/paraglide

      - name: Run quality checks
        run: |
          pnpm run lint
          pnpm run check

      - name: Create GitHub release (Ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Extract version from tag
          VERSION=${GITHUB_REF#refs/tags/}
          # Create release if it doesn't exist
          if ! gh release view "$VERSION" >/dev/null 2>&1; then
            gh release create "$VERSION" --title "$VERSION" --notes "Release $VERSION" --prerelease
          fi

      - name: Build and release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: pnpm run publish

      - name: Upload artifacts (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-artifacts
          path: |
            out/make/squirrel.windows/**/*

      - name: Upload artifacts (macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-artifacts
          path: |
            out/make/zip/**/*

      - name: Upload artifacts (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: linux-artifacts
          path: |
            out/make/deb/**/*
            out/make/rpm/**/*
