name: Validate Plugin Registry

on:
  # Allow manual trigger from GitHub Actions UI
  workflow_dispatch:
  pull_request:
    paths:
      - "packages/plugin-registry/registry.json"
      - "packages/plugin-registry/schema.json"
      - "packages/plugin-registry/scripts/validate.js"
  push:
    branches:
      - main
    paths:
      - "packages/plugin-registry/registry.json"

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: "22"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Install dependencies
        working-directory: packages/plugin-registry
        run: pnpm install --frozen-lockfile

      - name: Validate registry
        working-directory: packages/plugin-registry
        run: pnpm run validate

      - name: Check download URLs
        working-directory: packages/plugin-registry
        run: |
          echo "Checking download URLs..."
          node -e "
            const fs = require('fs');
            const registry = JSON.parse(fs.readFileSync('registry.json', 'utf-8'));

            let failed = false;

            for (const plugin of registry.plugins) {
              console.log(\`Checking \${plugin.id}...\`);

              // Note: We don't actually download to avoid rate limits
              // Just verify URL format
              if (!plugin.downloadUrl.startsWith('https://')) {
                console.error(\`‚ùå Plugin \${plugin.id}: downloadUrl must use HTTPS\`);
                failed = true;
              }

              if (!plugin.downloadUrl.endsWith('.zip')) {
                console.warn(\`‚ö†Ô∏è  Plugin \${plugin.id}: downloadUrl should point to a .zip file\`);
              }
            }

            if (failed) {
              process.exit(1);
            }

            console.log('‚úÖ All download URLs passed format check');
          "

      - name: Lint JSON
        working-directory: packages/plugin-registry
        run: |
          echo "Checking JSON formatting..."
          # Check if registry.json is properly formatted with tabs
          if ! git diff --exit-code registry.json; then
            echo "‚ö†Ô∏è  registry.json has uncommitted formatting changes"
          fi

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const registry = JSON.parse(fs.readFileSync('packages/plugin-registry/registry.json', 'utf-8'));

            // Find newly added plugins (simplified - just count)
            const pluginCount = registry.plugins.length;

            const comment = `## ‚úÖ Registry Validation Passed

            **Registry Statistics:**
            - Total Plugins: ${pluginCount}
            - Last Updated: ${registry.lastUpdated}

            Your plugin submission has passed automated validation!

            A maintainer will review your submission soon. Thank you for contributing to the 302 AI Studio plugin ecosystem! üéâ`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
